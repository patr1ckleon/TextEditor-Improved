@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Email">Email</a></li>
    <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/ChangePassword">Password</a></li>
    <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/TwoFactorAuthentication">2FA</a></li>
    <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/PersonalData">Personal data</a></li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Docs", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a></li>
    <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a></li>
}
</ul>
